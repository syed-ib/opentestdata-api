openapi: "3.0.0"

info:
  version: 1.0.0
  title: OpenTestData
  license:
    name: MIT

paths:
  /ping:
    $ref: 'base.yaml#/paths/Ping'
  /users:
    $ref: 'users.yaml#/paths/SignUp'
  /users/login:
    $ref: 'users.yaml#/paths/Login'
  /users/resend_confirmation_email:
    $ref: 'users.yaml#/paths/EmailResend'
  /users/confirm_email/{token}:
    $ref: 'users.yaml#/paths/EmailConfirm'
  /users/{id}:
    $ref: 'users.yaml#/paths/GetOrUpdateUser'
  /users/{id}/avatar:
    $ref: 'users.yaml#/paths/GetOrUpdateAvatar'
  /users/{id}/promote:
    $ref: 'users.yaml#/paths/PromoteUser'
  /data:
    post:
      summary: Create a new test datum
      operationId: api.handlers.data.create
      requestBody:
        description: Datum details
        required: true
        content:
          application/json:
            schema:
              $ref: 'datum.yaml#/schemas/DatumBase'
      responses:
        '200':
          description: Datum details
          content:
            application/json:
              schema:
                $ref: 'datum.yaml#/schemas/Datum'
      security:
        - jwt: []
  /data/{id}:
    get:
      summary: Get details of a datum
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The datum ID
      operationId: api.handlers.data.detail
      responses:
        '200':
          description: Datum details
          content:
            application/json:
              schema:
                $ref: 'datum.yaml#/schemas/Datum'
      security:
        - jwt: []
    post:
      summary: Update a test datum
      operationId: api.handlers.data.update
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The datum ID
      requestBody:
        description: Datum details
        required: true
        content:
          application/json:
            schema:
              $ref: 'datum.yaml#/schemas/DatumBase'
      responses:
        '200':
          description: Datum details
          content:
            application/json:
              schema:
                $ref: 'datum.yaml#/schemas/Datum'
      security:
        - jwt: []
  /tests:
    post:
      summary: Create a new test
      operationId: api.handlers.tests.create
      requestBody:
        description: Test details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestBase'
      responses:
        '200':
          description: Test details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
      security:
        - jwt: []
  /tests/{id}:
    get:
      summary: Get details of a test
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The test ID
      operationId: api.handlers.tests.detail
      responses:
        '200':
          description: Test details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Test'
      security:
        - jwt: []
  /search:
    post:
      summary: Search for tests and data
      operationId: api.handlers.search.search
      requestBody:
        description: Search parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchQuery'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
      security:
        - jwt: []

components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: api.handlers.auth.check_token

  schemas:
    TestBase:
      properties:
        name:
          type: string
          maxLength: 160
          minLength: 1
        data:
          type: array
          items:
            $ref: '#/components/schemas/TestData'
      required:
        - name
        - data
      additionalProperties: false 
    Test:
      allOf:
        - $ref: '#/components/schemas/TestBase'
        - $ref: 'base.yaml#/schemas/Base'
        - properties:
            user_id:
              type: integer
    TestData:
      properties:
        label:
          type: string
          maxLength: 80
          minLength: 1
        disposition:
          type: string
          enum:
            - NEUTRAL
            - POS
            - NEG
            - EDGE
            - DESTRUCTIVE
        datum_id:
          type: integer
    SearchQuery:
      properties:
        type:
          type: string
          enum:
            - ALL
            - TESTS
            - DATA
        query:
          type: string
          minLength: 2
    SearchResults:
      properties:
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test'
        data:
          type: array
          items:
            $ref: 'datum.yaml#/schemas/Datum'
